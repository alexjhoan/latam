{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation changeNotificationsStatus {\\n\\t\\tnotificationSeeAll\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation changeNotificationStatus($id: ID!, $seen: Boolean!) {\\n\\t\\tnotificationSetSeen(id: $id, seen: $seen) {\\n\\t\\t\\tid\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useUser } from \"../User.hook\";\nvar CHANGE_STATUS_MUTATION = gql(_templateObject());\nvar ALL_NOTIFICATION_SEEN_MUTATION = gql(_templateObject2());\nexport var useNotifications = function useNotifications() {\n  _s();\n\n  var _user$data, _user$data2;\n\n  var _useUser = useUser(),\n      user = _useUser.user;\n\n  var _useMutation = useMutation(CHANGE_STATUS_MUTATION, {\n    onCompleted: function onCompleted(response) {\n      return user.refetch();\n    },\n    onError: function onError(error) {\n      return console.error(error);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      changeNotification = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var changeNotificationStatus = function changeNotificationStatus(id, status) {\n    changeNotification({\n      variables: {\n        seen: status,\n        id: id\n      }\n    });\n  };\n\n  var _useMutation3 = useMutation(ALL_NOTIFICATION_SEEN_MUTATION, {\n    onCompleted: function onCompleted(response) {\n      return user.refetch();\n    },\n    onError: function onError(error) {\n      return console.error(error);\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      setAllNotificationSeen = _useMutation4[0],\n      loadingAll = _useMutation4[1].loading;\n\n  return {\n    notifications: user === null || user === void 0 ? void 0 : (_user$data = user.data) === null || _user$data === void 0 ? void 0 : _user$data.me.notifications.data,\n    unread_notifications: user === null || user === void 0 ? void 0 : (_user$data2 = user.data) === null || _user$data2 === void 0 ? void 0 : _user$data2.me.unread_notifications,\n    changeNotificationStatus: changeNotificationStatus,\n    loadingChange: loading,\n    setAllNotificationSeen: setAllNotificationSeen,\n    loadingAll: loadingAll,\n    loadingUser: user.loading\n  };\n};\n\n_s(useNotifications, \"qLQJI/Nzve6sb7FVa+ZDriEDYrI=\", false, function () {\n  return [useUser, useMutation, useMutation];\n});","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/User/NotificationList/hook.tsx"],"names":["gql","useMutation","useUser","CHANGE_STATUS_MUTATION","ALL_NOTIFICATION_SEEN_MUTATION","useNotifications","user","onCompleted","response","refetch","onError","error","console","changeNotification","loading","changeNotificationStatus","id","status","variables","seen","setAllNotificationSeen","loadingAll","notifications","data","me","unread_notifications","loadingChange","loadingUser"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,IAAMC,sBAAsB,GAAGH,GAAH,mBAA5B;AAQA,IAAMI,8BAA8B,GAAGJ,GAAH,oBAApC;AAMA,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAAA;;AAAA,iBACpBH,OAAO,EADa;AAAA,MAC7BI,IAD6B,YAC7BA,IAD6B;;AAAA,qBAGKL,WAAW,CAACE,sBAAD,EAAyB;AAC7EI,IAAAA,WAAW,EAAE,qBAAAC,QAAQ;AAAA,aAAIF,IAAI,CAACG,OAAL,EAAJ;AAAA,KADwD;AAE7EC,IAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,aAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA;AAF+D,GAAzB,CAHhB;AAAA;AAAA,MAG9BE,kBAH8B;AAAA,MAGRC,OAHQ,oBAGRA,OAHQ;;AAQrC,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,EAAD,EAAKC,MAAL,EAAgB;AAChDJ,IAAAA,kBAAkB,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAEF,MAAR;AAAgBD,QAAAA,EAAE,EAAEA;AAApB;AAAb,KAAD,CAAlB;AACA,GAFD;;AARqC,sBAYqBf,WAAW,CACpEG,8BADoE,EAEpE;AACCG,IAAAA,WAAW,EAAE,qBAAAC,QAAQ;AAAA,aAAIF,IAAI,CAACG,OAAL,EAAJ;AAAA,KADtB;AAECC,IAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,aAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA;AAFf,GAFoE,CAZhC;AAAA;AAAA,MAY9BS,sBAZ8B;AAAA,MAYKC,UAZL,oBAYJP,OAZI;;AAoBrC,SAAO;AACNQ,IAAAA,aAAa,EAAEhB,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAEiB,IAAR,+CAAE,WAAYC,EAAZ,CAAeF,aAAf,CAA6BC,IADtC;AAENE,IAAAA,oBAAoB,EAAEnB,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEiB,IAAR,gDAAE,YAAYC,EAAZ,CAAeC,oBAF/B;AAGNV,IAAAA,wBAAwB,EAAxBA,wBAHM;AAINW,IAAAA,aAAa,EAAEZ,OAJT;AAKNM,IAAAA,sBAAsB,EAAtBA,sBALM;AAMNC,IAAAA,UAAU,EAAEA,UANN;AAONM,IAAAA,WAAW,EAAErB,IAAI,CAACQ;AAPZ,GAAP;AASA,CA7BM;;GAAMT,gB;UACKH,O,EAEyBD,W,EASgBA,W","sourcesContent":["import { gql, useMutation } from \"@apollo/client\";\nimport { useUser } from \"../User.hook\";\n\nconst CHANGE_STATUS_MUTATION = gql`\n\tmutation changeNotificationStatus($id: ID!, $seen: Boolean!) {\n\t\tnotificationSetSeen(id: $id, seen: $seen) {\n\t\t\tid\n\t\t}\n\t}\n`;\n\nconst ALL_NOTIFICATION_SEEN_MUTATION = gql`\n\tmutation changeNotificationsStatus {\n\t\tnotificationSeeAll\n\t}\n`;\n\nexport const useNotifications = () => {\n\tconst { user } = useUser();\n\n\tconst [changeNotification, { loading }] = useMutation(CHANGE_STATUS_MUTATION, {\n\t\tonCompleted: response => user.refetch(),\n\t\tonError: error => console.error(error),\n\t});\n\n\tconst changeNotificationStatus = (id, status) => {\n\t\tchangeNotification({ variables: { seen: status, id: id } });\n\t};\n\n\tconst [setAllNotificationSeen, { loading: loadingAll }] = useMutation(\n\t\tALL_NOTIFICATION_SEEN_MUTATION,\n\t\t{\n\t\t\tonCompleted: response => user.refetch(),\n\t\t\tonError: error => console.error(error),\n\t\t}\n\t);\n\n\treturn {\n\t\tnotifications: user?.data?.me.notifications.data,\n\t\tunread_notifications: user?.data?.me.unread_notifications,\n\t\tchangeNotificationStatus,\n\t\tloadingChange: loading,\n\t\tsetAllNotificationSeen,\n\t\tloadingAll: loadingAll,\n\t\tloadingUser: user.loading,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}