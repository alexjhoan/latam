{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery SEO($url: String!) {\\n\\t\\tseoMetaTags(url: $url) {\\n\\t\\t\\th1\\n\\t\\t\\ttitle\\n\\t\\t\\tbreadcrumbs {\\n\\t\\t\\t\\ttext\\n\\t\\t\\t\\turl\\n\\t\\t\\t}\\n\\n\\t\\t\\tdescription\\n\\t\\t\\tog_image\\n\\t\\t\\tnoindex\\n\\t\\t\\tcanonical\\n\\t\\t\\tsite_name\\n\\t\\t\\tlinks\\n\\t\\t\\ttext\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nvar QUERY_SEO = gql(_templateObject());\nexport var useSEO = function useSEO() {\n  _s();\n\n  var _seoMetaTags$breadcru;\n\n  var router = useRouter();\n\n  var _useQuery = useQuery(QUERY_SEO, {\n    variables: {\n      url: router.asPath\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var seoMetaTags = _objectSpread({}, data === null || data === void 0 ? void 0 : data.seoMetaTags);\n\n  if (seoMetaTags && ((_seoMetaTags$breadcru = seoMetaTags.breadcrumbs) === null || _seoMetaTags$breadcru === void 0 ? void 0 : _seoMetaTags$breadcru.length) > 1) {\n    seoMetaTags[\"lastSearch\"] = seoMetaTags.breadcrumbs[seoMetaTags.breadcrumbs.length - 2];\n  }\n\n  return {\n    loading: loading,\n    seoMetaTags: seoMetaTags,\n    error: error\n  };\n};\n\n_s(useSEO, \"iceLXWjNxjNDYEEqU/kIP9QHhY0=\", false, function () {\n  return [useRouter, useQuery];\n});","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/SEO/hook.tsx"],"names":["useQuery","gql","useRouter","QUERY_SEO","useSEO","router","variables","url","asPath","data","loading","error","seoMetaTags","breadcrumbs","length"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAAsBA,QAAtB,QAAsC,gBAAtC;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAQA,IAAMC,SAAS,GAAGF,GAAH,mBAAf;AAqBA,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAuB;AAAA;;AAAA;;AAC5C,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AAD4C,kBAGXF,QAAQ,CAACG,SAAD,EAAY;AACpDG,IAAAA,SAAS,EAAE;AACVC,MAAAA,GAAG,EAAEF,MAAM,CAACG;AADF;AADyC,GAAZ,CAHG;AAAA,MAGpCC,IAHoC,aAGpCA,IAHoC;AAAA,MAG9BC,OAH8B,aAG9BA,OAH8B;AAAA,MAGrBC,KAHqB,aAGrBA,KAHqB;;AAS5C,MAAIC,WAAW,qBAAQH,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEG,WAAd,CAAf;;AACA,MAAIA,WAAW,IAAI,0BAAAA,WAAW,CAACC,WAAZ,gFAAyBC,MAAzB,IAAkC,CAArD,EAAwD;AACvDF,IAAAA,WAAW,CAAC,YAAD,CAAX,GAA4BA,WAAW,CAACC,WAAZ,CAAwBD,WAAW,CAACC,WAAZ,CAAwBC,MAAxB,GAAiC,CAAzD,CAA5B;AACA;;AAED,SAAO;AACNJ,IAAAA,OAAO,EAAPA,OADM;AAENE,IAAAA,WAAW,EAAXA,WAFM;AAGND,IAAAA,KAAK,EAALA;AAHM,GAAP;AAKA,CAnBM;;GAAMP,M;UACGF,S,EAEkBF,Q","sourcesContent":["import { ApolloError, useQuery } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\";\nimport { seoMetaTags } from \"./model\";\nimport { useRouter } from \"next/router\";\n\ninterface SeoHookResponse {\n\tseoMetaTags: seoMetaTags;\n\tloading: boolean;\n\terror: ApolloError;\n}\n\nconst QUERY_SEO = gql`\n\tquery SEO($url: String!) {\n\t\tseoMetaTags(url: $url) {\n\t\t\th1\n\t\t\ttitle\n\t\t\tbreadcrumbs {\n\t\t\t\ttext\n\t\t\t\turl\n\t\t\t}\n\n\t\t\tdescription\n\t\t\tog_image\n\t\t\tnoindex\n\t\t\tcanonical\n\t\t\tsite_name\n\t\t\tlinks\n\t\t\ttext\n\t\t}\n\t}\n`;\n\nexport const useSEO = (): SeoHookResponse => {\n\tconst router = useRouter();\n\n\tconst { data, loading, error } = useQuery(QUERY_SEO, {\n\t\tvariables: {\n\t\t\turl: router.asPath,\n\t\t},\n\t});\n\n\tlet seoMetaTags = { ...data?.seoMetaTags };\n\tif (seoMetaTags && seoMetaTags.breadcrumbs?.length > 1) {\n\t\tseoMetaTags[\"lastSearch\"] = seoMetaTags.breadcrumbs[seoMetaTags.breadcrumbs.length - 2];\n\t}\n\n\treturn {\n\t\tloading,\n\t\tseoMetaTags,\n\t\terror,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}