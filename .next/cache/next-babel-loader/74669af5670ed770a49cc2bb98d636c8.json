{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ansina/jsStuff/infocasas-landings/shared-components/Components/Filters/TemporalFilter/DateRange/web.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DatePicker, Typography } from \"antd\";\nimport { useDateRange } from \"./DateRange.hook\";\nimport dayjs from \"dayjs\";\nimport { DateRangePickerMobile } from \"./CustomCalendar/web\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nvar RangePicker = DatePicker.RangePicker;\nexport var DateRange = function DateRange(_ref) {\n  _s();\n\n  var filterChanged = _ref.filterChanged;\n\n  var _useDateRange = useDateRange(),\n      dateFrom = _useDateRange.dateFrom,\n      dateTo = _useDateRange.dateTo;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  dayjs.extend(customParseFormat);\n  var screen = useBreakpoint();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var vars = {\n    disabledDate: function disabledDate(d) {\n      return d.isBefore(dayjs(new Date()), \"date\");\n    },\n    defaultValue: [dayjs(new Date()), null],\n    value: [dateFrom ? dayjs(dateFrom, \"DD/MM/YYYY\") : null, dateTo ? dayjs(dateTo, \"DD/MM/YYYY\") : null],\n    placeholder: [t(\"Llegada\"), t(\"Salida\")],\n    format: \"DD/MM/YYYY\",\n    onChange: function onChange(date, dateString) {\n      filterChanged({\n        dateFrom: date && date[0] ? {\n          value: dateString[0],\n          text: dateString[0]\n        } : null,\n        dateTo: date && date[1] ? {\n          value: dateString[1],\n          text: dateString[1]\n        } : null,\n        season: null\n      });\n    },\n    onOpenChange: function onOpenChange(e) {\n      return setOpen(e);\n    },\n    allowClear: true\n  };\n  return __jsx(React.Fragment, null, __jsx(RangePicker, _extends({\n    className: \"secondary\",\n    open: open && screen.lg,\n    dropdownClassName: \"range-picker-custom secondary\"\n  }, vars, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  })), __jsx(DateRangePickerMobile, _extends({\n    open: open && !screen.lg\n  }, vars, {\n    clearIcon: __jsx(Typography.Text, {\n      underline: true,\n      style: {\n        fontSize: \"15px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }\n    }, t(\"Borrar\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  })));\n};\n\n_s(DateRange, \"JEmxzIasVRJIG+Gtmq1vvSD9CCI=\", false, function () {\n  return [useDateRange, useTranslation, useBreakpoint];\n});\n\n_c = DateRange;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateRange\");","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/Filters/TemporalFilter/DateRange/web.tsx"],"names":["DatePicker","Typography","useDateRange","dayjs","DateRangePickerMobile","customParseFormat","useBreakpoint","useState","useTranslation","RangePicker","DateRange","filterChanged","dateFrom","dateTo","t","extend","screen","open","setOpen","vars","disabledDate","d","isBefore","Date","defaultValue","value","placeholder","format","onChange","date","dateString","text","season","onOpenChange","e","allowClear","lg","fontSize"],"mappings":"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","sourcesContent":["import { DatePicker, Typography } from \"antd\";\nimport { DateRangeProps, useDateRange } from \"./DateRange.hook\";\nimport dayjs, { Dayjs } from \"dayjs\";\n\nimport { DateRangePickerMobile } from \"./CustomCalendar/web\";\nimport { RangePickerDateProps } from \"antd/lib/date-picker/generatePicker\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { RangePicker } = DatePicker;\n\nexport const DateRange = ({ filterChanged }: DateRangeProps) => {\n\tconst { dateFrom, dateTo } = useDateRange();\n\tconst { t } = useTranslation();\n\tdayjs.extend(customParseFormat);\n\n\tconst screen = useBreakpoint();\n\tconst [open, setOpen] = useState<boolean>(false);\n\n\tconst vars: RangePickerDateProps<Dayjs> = {\n\t\tdisabledDate: d => d.isBefore(dayjs(new Date()), \"date\"),\n\t\tdefaultValue: [dayjs(new Date()), null],\n\t\tvalue: [\n\t\t\tdateFrom ? dayjs(dateFrom, \"DD/MM/YYYY\") : null,\n\t\t\tdateTo ? dayjs(dateTo, \"DD/MM/YYYY\") : null,\n\t\t],\n\t\tplaceholder: [t(\"Llegada\"), t(\"Salida\")],\n\t\tformat: \"DD/MM/YYYY\",\n\t\tonChange: (date, dateString) => {\n\t\t\tfilterChanged({\n\t\t\t\tdateFrom: date && date[0] ? { value: dateString[0], text: dateString[0] } : null,\n\t\t\t\tdateTo: date && date[1] ? { value: dateString[1], text: dateString[1] } : null,\n\t\t\t\tseason: null,\n\t\t\t});\n\t\t},\n\t\tonOpenChange: e => setOpen(e),\n\t\tallowClear: true,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<RangePicker\n\t\t\t\tclassName=\"secondary\"\n\t\t\t\topen={open && screen.lg}\n\t\t\t\tdropdownClassName=\"range-picker-custom secondary\"\n\t\t\t\t{...vars}\n\t\t\t/>\n\n\t\t\t<DateRangePickerMobile\n\t\t\t\topen={open && !screen.lg}\n\t\t\t\t{...vars}\n\t\t\t\tclearIcon={\n\t\t\t\t\t<Typography.Text underline style={{ fontSize: \"15px\" }}>\n\t\t\t\t\t\t{t(\"Borrar\")}\n\t\t\t\t\t</Typography.Text>\n\t\t\t\t}\n\t\t\t/>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}