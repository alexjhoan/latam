{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { useFilters } from \"../Filters.hook\";\nimport { showSeason, showDateRange } from \"../../../Utils/Functions\";\nexport const useTemporalFilter = () => {\n  const {\n    filters\n  } = useFilters();\n  const {\n    0: showSeasonInput,\n    1: setShowSeasonInput\n  } = useState(filters.season ? true : false);\n  const {\n    0: isTemporal,\n    1: setIsTemporal\n  } = useState(false);\n  useEffect(() => {\n    setIsTemporal(showSeason(filters.operation_type_id, 1) && showDateRange(filters.operation_type_id)); //@todo - add country id from hook, not hardcoded\n  }, [filters]);\n  return {\n    filters,\n    showSeasonInput: showSeasonInput,\n    setShowSeasonInput: setShowSeasonInput,\n    isTemporal: isTemporal\n  };\n};","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/Filters/TemporalFilter/TemporalFilter.hook.tsx"],"names":["useState","useEffect","useFilters","showSeason","showDateRange","useTemporalFilter","filters","showSeasonInput","setShowSeasonInput","season","isTemporal","setIsTemporal","operation_type_id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,0BAA1C;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,UAAU,EAA9B;AACA,QAAM;AAAA,OAACK,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAACM,OAAO,CAACG,MAAR,GAAiB,IAAjB,GAAwB,KAAzB,CAAtD;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,aAAa,CACZR,UAAU,CAACG,OAAO,CAACM,iBAAT,EAA4B,CAA5B,CAAV,IACCR,aAAa,CAACE,OAAO,CAACM,iBAAT,CAFF,CAAb,CADe,CAIZ;AACH,GALQ,EAKN,CAACN,OAAD,CALM,CAAT;AAOA,SAAO;AACNA,IAAAA,OADM;AAENC,IAAAA,eAAe,EAAEA,eAFX;AAGNC,IAAAA,kBAAkB,EAAEA,kBAHd;AAINE,IAAAA,UAAU,EAAEA;AAJN,GAAP;AAMA,CAlBM","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useFilters } from \"../Filters.hook\";\nimport { showSeason, showDateRange } from \"../../../Utils/Functions\";\n\nexport const useTemporalFilter = () => {\n\tconst { filters } = useFilters();\n\tconst [showSeasonInput, setShowSeasonInput] = useState(filters.season ? true : false);\n\tconst [isTemporal, setIsTemporal] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetIsTemporal(\n\t\t\tshowSeason(filters.operation_type_id, 1) &&\n\t\t\t\tshowDateRange(filters.operation_type_id)\n\t\t); //@todo - add country id from hook, not hardcoded\n\t}, [filters]);\n\n\treturn {\n\t\tfilters,\n\t\tshowSeasonInput: showSeasonInput,\n\t\tsetShowSeasonInput: setShowSeasonInput,\n\t\tisTemporal: isTemporal,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}