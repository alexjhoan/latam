{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext } from \"react\";\nimport { ConfigStateContext } from \"../../../Contexts/Configurations/context\";\nimport { QUERY_DESTACADO_HOME } from \"../../Home/BannerHome/BannerHome.hook\";\nimport { removeUrlProtocol } from \"../../../Utils/Functions\";\nimport { useQuery } from \"@apollo/client\";\n\nconst parseLink = primaryLink => {\n  var _data$featuredBannerH;\n\n  const {\n    data\n  } = useQuery(QUERY_DESTACADO_HOME, {\n    variables: primaryLink.banner_params,\n    fetchPolicy: \"cache-first\"\n  });\n  const {\n    image,\n    name,\n    image_vertical,\n    url\n  } = (_data$featuredBannerH = data === null || data === void 0 ? void 0 : data.featuredBannerHome) !== null && _data$featuredBannerH !== void 0 ? _data$featuredBannerH : {};\n  const banner = {\n    img: image_vertical,\n    link: removeUrlProtocol(url !== null && url !== void 0 ? url : \"\"),\n    text: name,\n    subtitle: name,\n    title: name\n  };\n  const links = primaryLink.links.map(link => {\n    let categoryNames = [];\n    link.links.forEach(({\n      category\n    }) => {\n      if (!categoryNames.includes(category)) {\n        categoryNames.push(category);\n      }\n    });\n    const categories = categoryNames.map(categoryName => {\n      const linksCategory = link.links.filter(({\n        category\n      }) => category === categoryName);\n      return {\n        title: categoryName,\n        links: linksCategory\n      };\n    });\n    return _objectSpread(_objectSpread({}, link), {}, {\n      categories\n    });\n  });\n  return _objectSpread(_objectSpread({}, primaryLink), {}, {\n    banner,\n    links\n  });\n};\n\nexport const useSeoHeader = () => {\n  var _header_links$map;\n\n  const {\n    header_links\n  } = useContext(ConfigStateContext);\n  const headerLinks = (_header_links$map = header_links === null || header_links === void 0 ? void 0 : header_links.map(parseLink)) !== null && _header_links$map !== void 0 ? _header_links$map : [];\n  return {\n    headerLinks\n  };\n};","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/ViewFragments/Header/SeoHeader/hook.tsx"],"names":["useContext","ConfigStateContext","QUERY_DESTACADO_HOME","removeUrlProtocol","useQuery","parseLink","primaryLink","data","variables","banner_params","fetchPolicy","image","name","image_vertical","url","featuredBannerHome","banner","img","link","text","subtitle","title","links","map","categoryNames","forEach","category","includes","push","categories","categoryName","linksCategory","filter","useSeoHeader","header_links","headerLinks"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AACA,SAASC,oBAAT,QAAqC,uCAArC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,SAAS,GAAGC,WAAW,IAAI;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAWH,QAAQ,CAACF,oBAAD,EAAuB;AAC/CM,IAAAA,SAAS,EAAEF,WAAW,CAACG,aADwB;AAE/CC,IAAAA,WAAW,EAAE;AAFkC,GAAvB,CAAzB;AAKA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA;AAA/B,+BAAuCP,IAAvC,aAAuCA,IAAvC,uBAAuCA,IAAI,CAAEQ,kBAA7C,yEAAmE,EAAzE;AACA,QAAMC,MAAM,GAAG;AACdC,IAAAA,GAAG,EAAEJ,cADS;AAEdK,IAAAA,IAAI,EAAEf,iBAAiB,CAACW,GAAD,aAACA,GAAD,cAACA,GAAD,GAAQ,EAAR,CAFT;AAGdK,IAAAA,IAAI,EAAEP,IAHQ;AAIdQ,IAAAA,QAAQ,EAAER,IAJI;AAKdS,IAAAA,KAAK,EAAET;AALO,GAAf;AAQA,QAAMU,KAAK,GAAGhB,WAAW,CAACgB,KAAZ,CAAkBC,GAAlB,CAAsBL,IAAI,IAAI;AAC3C,QAAIM,aAAa,GAAG,EAApB;AAEAN,IAAAA,IAAI,CAACI,KAAL,CAAWG,OAAX,CAAmB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACpC,UAAI,CAACF,aAAa,CAACG,QAAd,CAAuBD,QAAvB,CAAL,EAAuC;AACtCF,QAAAA,aAAa,CAACI,IAAd,CAAmBF,QAAnB;AACA;AACD,KAJD;AAMA,UAAMG,UAAU,GAAGL,aAAa,CAACD,GAAd,CAAkBO,YAAY,IAAI;AACpD,YAAMC,aAAa,GAAGb,IAAI,CAACI,KAAL,CAAWU,MAAX,CACrB,CAAC;AAAEN,QAAAA;AAAF,OAAD,KAAkBA,QAAQ,KAAKI,YADV,CAAtB;AAIA,aAAO;AACNT,QAAAA,KAAK,EAAES,YADD;AAENR,QAAAA,KAAK,EAAES;AAFD,OAAP;AAIA,KATkB,CAAnB;AAWA,2CACIb,IADJ;AAECW,MAAAA;AAFD;AAIA,GAxBa,CAAd;AA0BA,yCACIvB,WADJ;AAECU,IAAAA,MAFD;AAGCM,IAAAA;AAHD;AAKA,CA9CD;;AAgDA,OAAO,MAAMW,YAAY,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAmBlC,UAAU,CAACC,kBAAD,CAAnC;AAEA,QAAMkC,WAAW,wBAAGD,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEX,GAAd,CAAkBlB,SAAlB,CAAH,iEAAmC,EAApD;AAEA,SAAO;AACN8B,IAAAA;AADM,GAAP;AAGA,CARM","sourcesContent":["import { useContext } from \"react\";\nimport { ConfigStateContext } from \"../../../Contexts/Configurations/context\";\nimport { QUERY_DESTACADO_HOME } from \"../../Home/BannerHome/BannerHome.hook\";\nimport { removeUrlProtocol } from \"../../../Utils/Functions\";\nimport { useQuery } from \"@apollo/client\";\n\nconst parseLink = primaryLink => {\n\tconst { data } = useQuery(QUERY_DESTACADO_HOME, {\n\t\tvariables: primaryLink.banner_params,\n\t\tfetchPolicy: \"cache-first\"\n\t});\n\n\tconst { image, name, image_vertical, url } = data?.featuredBannerHome ?? {};\n\tconst banner = {\n\t\timg: image_vertical,\n\t\tlink: removeUrlProtocol(url ?? \"\"),\n\t\ttext: name,\n\t\tsubtitle: name,\n\t\ttitle: name,\n\t};\n\n\tconst links = primaryLink.links.map(link => {\n\t\tlet categoryNames = [];\n\n\t\tlink.links.forEach(({ category }) => {\n\t\t\tif (!categoryNames.includes(category)) {\n\t\t\t\tcategoryNames.push(category);\n\t\t\t}\n\t\t});\n\n\t\tconst categories = categoryNames.map(categoryName => {\n\t\t\tconst linksCategory = link.links.filter(\n\t\t\t\t({ category }) => category === categoryName\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\ttitle: categoryName,\n\t\t\t\tlinks: linksCategory,\n\t\t\t};\n\t\t});\n\n\t\treturn {\n\t\t\t...link,\n\t\t\tcategories,\n\t\t};\n\t});\n\n\treturn {\n\t\t...primaryLink,\n\t\tbanner,\n\t\tlinks,\n\t};\n};\n\nexport const useSeoHeader = () => {\n\tconst { header_links } = useContext(ConfigStateContext);\n\n\tconst headerLinks = header_links?.map(parseLink) ?? [];\n\n\treturn {\n\t\theaderLinks,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}