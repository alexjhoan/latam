{"ast":null,"code":"import { gql, useLazyQuery } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport { FRAGMENT_OPERATIONTYPES } from \"../../../Components/Filters/OperationType/OperationType.hook\";\nimport { FRAGMENT_PROPERTYTYPES } from \"../../../Components/Filters/PropertyType/PropertyType.hook\";\nimport { FRAGMENT_SEASONS } from \"../../../Components/Filters/TemporalFilter/Seasons/Seasons.hook\";\nimport { FRAGMENT_DATERANGE } from \"../../../Components/Filters/TemporalFilter/DateRange/DateRange.hook\";\nimport { useFilters } from \"../../../Components/Filters/Filters.hook\";\nconst QUERY_AVAILABLE_FILTERS = gql`\n  query availableFilters{\n    availableFilters(show_in_home:true){\n\t\t  ${FRAGMENT_OPERATIONTYPES.query()}\n\t\t  ${FRAGMENT_PROPERTYTYPES.query()}\n      ${FRAGMENT_SEASONS.query()}\n      ${FRAGMENT_DATERANGE.query()}\n    }\n  }\n`;\nconst QUERY_SEARCH_URL = gql`\n\tquery searchUrl($params: SearchParamsInput!) {\n\t\tsearchUrl(params: $params) {\n\t\t\turl\n\t\t}\n\t\terror\n\t}\n`;\nexport const useHomeFilters = () => {\n  const {\n    filters,\n    changeFilters,\n    filtersTags\n  } = useFilters();\n  const doQuery = useQuery(QUERY_AVAILABLE_FILTERS);\n  const [getSearchURL, response] = useLazyQuery(QUERY_SEARCH_URL, {\n    onError: errURL => console.error(\"ERROR\", errURL)\n  });\n  return {\n    filters,\n    changeFilters,\n    filtersTags,\n    search: {\n      send: getSearchURL,\n      response: response\n    }\n  };\n};","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/ViewFragments/Home/HomeFilters/HomeFilters.hook.tsx"],"names":["gql","useLazyQuery","useQuery","FRAGMENT_OPERATIONTYPES","FRAGMENT_PROPERTYTYPES","FRAGMENT_SEASONS","FRAGMENT_DATERANGE","useFilters","QUERY_AVAILABLE_FILTERS","query","QUERY_SEARCH_URL","useHomeFilters","filters","changeFilters","filtersTags","doQuery","getSearchURL","response","onError","errURL","console","error","search","send"],"mappings":"AAAA,SAASA,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,uBAAT,QAAwC,8DAAxC;AACA,SAASC,sBAAT,QAAuC,4DAAvC;AACA,SAASC,gBAAT,QAAiC,iEAAjC;AACA,SAASC,kBAAT,QAAmC,qEAAnC;AACA,SAASC,UAAT,QAA2B,0CAA3B;AAEA,MAAMC,uBAAuB,GAAGR,GAAI;;;MAG9BG,uBAAuB,CAACM,KAAxB,EAAgC;MAChCL,sBAAsB,CAACK,KAAvB,EAA+B;QAC7BJ,gBAAgB,CAACI,KAAjB,EAAyB;QACzBH,kBAAkB,CAACG,KAAnB,EAA2B;;;CANnC;AAWA,MAAMC,gBAAgB,GAAGV,GAAI;;;;;;;CAA7B;AASA,OAAO,MAAMW,cAAc,GAAG,MAAM;AACnC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA;AAA1B,MAA0CP,UAAU,EAA1D;AACA,QAAMQ,OAAO,GAAGb,QAAQ,CAACM,uBAAD,CAAxB;AAEA,QAAM,CAACQ,YAAD,EAAeC,QAAf,IAA2BhB,YAAY,CAACS,gBAAD,EAAmB;AAC/DQ,IAAAA,OAAO,EAAEC,MAAM,IAAIC,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuBF,MAAvB;AAD4C,GAAnB,CAA7C;AAIA,SAAO;AACNP,IAAAA,OADM;AAENC,IAAAA,aAFM;AAGNC,IAAAA,WAHM;AAINQ,IAAAA,MAAM,EAAE;AACPC,MAAAA,IAAI,EAAEP,YADC;AAEPC,MAAAA,QAAQ,EAAEA;AAFH;AAJF,GAAP;AASA,CAjBM","sourcesContent":["import { gql, useLazyQuery } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport { FRAGMENT_OPERATIONTYPES } from \"../../../Components/Filters/OperationType/OperationType.hook\";\nimport { FRAGMENT_PROPERTYTYPES } from \"../../../Components/Filters/PropertyType/PropertyType.hook\";\nimport { FRAGMENT_SEASONS } from \"../../../Components/Filters/TemporalFilter/Seasons/Seasons.hook\";\nimport { FRAGMENT_DATERANGE } from \"../../../Components/Filters/TemporalFilter/DateRange/DateRange.hook\";\nimport { useFilters } from \"../../../Components/Filters/Filters.hook\";\n\nconst QUERY_AVAILABLE_FILTERS = gql`\n  query availableFilters{\n    availableFilters(show_in_home:true){\n\t\t  ${FRAGMENT_OPERATIONTYPES.query()}\n\t\t  ${FRAGMENT_PROPERTYTYPES.query()}\n      ${FRAGMENT_SEASONS.query()}\n      ${FRAGMENT_DATERANGE.query()}\n    }\n  }\n`;\n\nconst QUERY_SEARCH_URL = gql`\n\tquery searchUrl($params: SearchParamsInput!) {\n\t\tsearchUrl(params: $params) {\n\t\t\turl\n\t\t}\n\t\terror\n\t}\n`;\n\nexport const useHomeFilters = () => {\n\tconst { filters, changeFilters, filtersTags } = useFilters();\n\tconst doQuery = useQuery(QUERY_AVAILABLE_FILTERS);\n\n\tconst [getSearchURL, response] = useLazyQuery(QUERY_SEARCH_URL, {\n\t\tonError: errURL => console.error(\"ERROR\", errURL),\n\t});\n\n\treturn {\n\t\tfilters,\n\t\tchangeFilters,\n\t\tfiltersTags,\n\t\tsearch: {\n\t\t\tsend: getSearchURL,\n\t\t\tresponse: response,\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}