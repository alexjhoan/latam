{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { FragmentDefiner, useReadFragment } from \"../../../../GlobalHooks/useReadFragment\";\nimport { useFilters } from \"../../Filters.hook\";\nvar FRAGMENT_SEASONS_OPTIONS = new FragmentDefiner(\"Filter\", \"\\n\\t\\tid\\n\\t\\tname\\n\\t\\toptions\\n\");\nexport var FRAGMENT_SEASONS = new FragmentDefiner(\"Filters\", \"\\n\\t\\tseasons {\\n\\t\\t\\t\".concat(FRAGMENT_SEASONS_OPTIONS.query(), \"\\n\\t\\t}\\n\"));\nexport var useSeasons = function useSeasons() {\n  _s();\n\n  var _useReadFragment = useReadFragment(FRAGMENT_SEASONS_OPTIONS, \"seasons\"),\n      loading = _useReadFragment.loading,\n      options = _useReadFragment.data.options,\n      error = _useReadFragment.error;\n\n  var _useFilters = useFilters(),\n      filters = _useFilters.filters;\n\n  return {\n    initialValue: filters.season,\n    options: {\n      loading: loading,\n      options: options\n    }\n  };\n};\n\n_s(useSeasons, \"+wooXOUve7gbyyr98njwtY/pkHk=\", false, function () {\n  return [useReadFragment, useFilters];\n});","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/Filters/TemporalFilter/Seasons/Seasons.hook.tsx"],"names":["FragmentDefiner","useReadFragment","useFilters","FRAGMENT_SEASONS_OPTIONS","FRAGMENT_SEASONS","query","useSeasons","loading","options","data","error","filters","initialValue","season"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,eAA1B,QAAiD,yCAAjD;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,IAAMC,wBAAwB,GAAG,IAAIH,eAAJ,CAChC,QADgC,sCAAjC;AASA,OAAO,IAAMI,gBAAgB,GAAG,IAAIJ,eAAJ,CAC/B,SAD+B,mCAI3BG,wBAAwB,CAACE,KAAzB,EAJ2B,eAAzB;AAaP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,yBAK3BL,eAAe,CAACE,wBAAD,EAA2B,SAA3B,CALY;AAAA,MAE9BI,OAF8B,oBAE9BA,OAF8B;AAAA,MAGtBC,OAHsB,oBAG9BC,IAH8B,CAGtBD,OAHsB;AAAA,MAI9BE,KAJ8B,oBAI9BA,KAJ8B;;AAAA,oBAOXR,UAAU,EAPC;AAAA,MAOvBS,OAPuB,eAOvBA,OAPuB;;AAS/B,SAAO;AACNC,IAAAA,YAAY,EAAED,OAAO,CAACE,MADhB;AAENL,IAAAA,OAAO,EAAE;AAAED,MAAAA,OAAO,EAAPA,OAAF;AAAWC,MAAAA,OAAO,EAAPA;AAAX;AAFH,GAAP;AAIA,CAbM;;GAAMF,U;UAKRL,e,EAEgBC,U","sourcesContent":["import { FragmentDefiner, useReadFragment } from \"../../../../GlobalHooks/useReadFragment\";\nimport { useFilters } from \"../../Filters.hook\";\n\nconst FRAGMENT_SEASONS_OPTIONS = new FragmentDefiner(\n\t\"Filter\",\n\t`\n\t\tid\n\t\tname\n\t\toptions\n`\n);\n\nexport const FRAGMENT_SEASONS = new FragmentDefiner(\n\t\"Filters\",\n\t`\n\t\tseasons {\n\t\t\t${FRAGMENT_SEASONS_OPTIONS.query()}\n\t\t}\n`\n);\n\nexport interface SeasonFilterProps {\n\tfilterChanged: ({}: any) => void;\n}\n\nexport const useSeasons = () => {\n\tconst {\n\t\tloading,\n\t\tdata: { options },\n\t\terror,\n\t} = useReadFragment(FRAGMENT_SEASONS_OPTIONS, \"seasons\");\n\n\tconst { filters } = useFilters();\n\n\treturn {\n\t\tinitialValue: filters.season,\n\t\toptions: { loading, options },\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}