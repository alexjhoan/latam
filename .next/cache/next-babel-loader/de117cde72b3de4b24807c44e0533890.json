{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t{\\n\\t\\tcountries {\\n\\t\\t\\tid\\n\\t\\t\\tname\\n\\t\\t\\torder\\n\\t\\t\\tdata {\\n\\t\\t\\t\\tmain_domain\\n\\t\\t\\t\\tcountry_flag\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nvar COUNTRIES_QUERY = gql(_templateObject());\n\nvar parseData = function parseData(countries) {\n  return countries.map(function (country) {\n    return _objectSpread({\n      id: country.id,\n      name: country.name,\n      url: \"//\".concat(country.data.main_domain)\n    }, country.data);\n  });\n};\n\nexport var useCountries = function useCountries() {\n  _s();\n\n  var _data$countries;\n\n  var _useQuery = useQuery(COUNTRIES_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  return {\n    loading: loading,\n    countries: parseData((_data$countries = data === null || data === void 0 ? void 0 : data.countries) !== null && _data$countries !== void 0 ? _data$countries : []),\n    error: error\n  };\n};\n\n_s(useCountries, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/ViewFragments/Footer/MoreAboutUs/Flags/hook.tsx"],"names":["gql","useQuery","COUNTRIES_QUERY","parseData","countries","map","country","id","name","url","data","main_domain","useCountries","loading","error"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;;AAcA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAC,SAAS,EAAI;AAC9B,SAAOA,SAAS,CAACC,GAAV,CAAc,UAAAC,OAAO;AAAA;AAC3BC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADe;AAE3BC,MAAAA,IAAI,EAAEF,OAAO,CAACE,IAFa;AAG3BC,MAAAA,GAAG,cAAOH,OAAO,CAACI,IAAR,CAAaC,WAApB;AAHwB,OAIxBL,OAAO,CAACI,IAJgB;AAAA,GAArB,CAAP;AAMA,CAPD;;AASA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA;;AAAA,kBACAX,QAAQ,CAACC,eAAD,CADR;AAAA,MACzBW,OADyB,aACzBA,OADyB;AAAA,MAChBC,KADgB,aAChBA,KADgB;AAAA,MACTJ,IADS,aACTA,IADS;;AAGjC,SAAO;AACNG,IAAAA,OAAO,EAAPA,OADM;AAENT,IAAAA,SAAS,EAAED,SAAS,oBAACO,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEN,SAAP,6DAAoB,EAApB,CAFd;AAGNU,IAAAA,KAAK,EAALA;AAHM,GAAP;AAKA,CARM;;GAAMF,Y;UACqBX,Q","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\n\nconst COUNTRIES_QUERY = gql`\n\t{\n\t\tcountries {\n\t\t\tid\n\t\t\tname\n\t\t\torder\n\t\t\tdata {\n\t\t\t\tmain_domain\n\t\t\t\tcountry_flag\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst parseData = countries => {\n\treturn countries.map(country => ({\n\t\tid: country.id,\n\t\tname: country.name,\n\t\turl: `//${country.data.main_domain}`,\n\t\t...country.data,\n\t}));\n};\n\nexport const useCountries = () => {\n\tconst { loading, error, data } = useQuery(COUNTRIES_QUERY);\n\n\treturn {\n\t\tloading,\n\t\tcountries: parseData(data?.countries ?? []),\n\t\terror,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}