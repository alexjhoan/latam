{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery searchUrl($params: SearchParamsInput!) {\\n\\t\\tsearchUrl(params: $params) {\\n\\t\\t\\turl\\n\\t\\t}\\n\\t\\terror\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query availableFilters{\\n    availableFilters(show_in_home:true){\\n\\t\\t  \", \"\\n\\t\\t  \", \"\\n      \", \"\\n      \", \"\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport { FRAGMENT_OPERATIONTYPES } from \"../../../Components/Filters/OperationType/OperationType.hook\";\nimport { FRAGMENT_PROPERTYTYPES } from \"../../../Components/Filters/PropertyType/PropertyType.hook\";\nimport { FRAGMENT_SEASONS } from \"../../../Components/Filters/TemporalFilter/Seasons/Seasons.hook\";\nimport { FRAGMENT_DATERANGE } from \"../../../Components/Filters/TemporalFilter/DateRange/DateRange.hook\";\nimport { useFilters } from \"../../../Components/Filters/Filters.hook\";\nvar QUERY_AVAILABLE_FILTERS = gql(_templateObject(), FRAGMENT_OPERATIONTYPES.query(), FRAGMENT_PROPERTYTYPES.query(), FRAGMENT_SEASONS.query(), FRAGMENT_DATERANGE.query());\nvar QUERY_SEARCH_URL = gql(_templateObject2());\nexport var useHomeFilters = function useHomeFilters() {\n  _s();\n\n  var _useFilters = useFilters(),\n      filters = _useFilters.filters,\n      changeFilters = _useFilters.changeFilters,\n      filtersTags = _useFilters.filtersTags;\n\n  var doQuery = useQuery(QUERY_AVAILABLE_FILTERS);\n\n  var _useLazyQuery = useLazyQuery(QUERY_SEARCH_URL, {\n    onError: function onError(errURL) {\n      return console.error(\"ERROR\", errURL);\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getSearchURL = _useLazyQuery2[0],\n      response = _useLazyQuery2[1];\n\n  return {\n    filters: filters,\n    changeFilters: changeFilters,\n    filtersTags: filtersTags,\n    search: {\n      send: getSearchURL,\n      response: response\n    }\n  };\n};\n\n_s(useHomeFilters, \"9J3HD+ZB6CkMh2LdBrDdg/xDACo=\", false, function () {\n  return [useFilters, useQuery, useLazyQuery];\n});","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/ViewFragments/Home/HomeFilters/HomeFilters.hook.tsx"],"names":["gql","useLazyQuery","useQuery","FRAGMENT_OPERATIONTYPES","FRAGMENT_PROPERTYTYPES","FRAGMENT_SEASONS","FRAGMENT_DATERANGE","useFilters","QUERY_AVAILABLE_FILTERS","query","QUERY_SEARCH_URL","useHomeFilters","filters","changeFilters","filtersTags","doQuery","onError","errURL","console","error","getSearchURL","response","search","send"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,uBAAT,QAAwC,8DAAxC;AACA,SAASC,sBAAT,QAAuC,4DAAvC;AACA,SAASC,gBAAT,QAAiC,iEAAjC;AACA,SAASC,kBAAT,QAAmC,qEAAnC;AACA,SAASC,UAAT,QAA2B,0CAA3B;AAEA,IAAMC,uBAAuB,GAAGR,GAAH,oBAGvBG,uBAAuB,CAACM,KAAxB,EAHuB,EAIvBL,sBAAsB,CAACK,KAAvB,EAJuB,EAKrBJ,gBAAgB,CAACI,KAAjB,EALqB,EAMrBH,kBAAkB,CAACG,KAAnB,EANqB,CAA7B;AAWA,IAAMC,gBAAgB,GAAGV,GAAH,oBAAtB;AASA,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,oBACaJ,UAAU,EADvB;AAAA,MAC3BK,OAD2B,eAC3BA,OAD2B;AAAA,MAClBC,aADkB,eAClBA,aADkB;AAAA,MACHC,WADG,eACHA,WADG;;AAEnC,MAAMC,OAAO,GAAGb,QAAQ,CAACM,uBAAD,CAAxB;;AAFmC,sBAIFP,YAAY,CAACS,gBAAD,EAAmB;AAC/DM,IAAAA,OAAO,EAAE,iBAAAC,MAAM;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuBF,MAAvB,CAAJ;AAAA;AADgD,GAAnB,CAJV;AAAA;AAAA,MAI5BG,YAJ4B;AAAA,MAIdC,QAJc;;AAQnC,SAAO;AACNT,IAAAA,OAAO,EAAPA,OADM;AAENC,IAAAA,aAAa,EAAbA,aAFM;AAGNC,IAAAA,WAAW,EAAXA,WAHM;AAINQ,IAAAA,MAAM,EAAE;AACPC,MAAAA,IAAI,EAAEH,YADC;AAEPC,MAAAA,QAAQ,EAAEA;AAFH;AAJF,GAAP;AASA,CAjBM;;GAAMV,c;UACoCJ,U,EAChCL,Q,EAEiBD,Y","sourcesContent":["import { gql, useLazyQuery } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport { FRAGMENT_OPERATIONTYPES } from \"../../../Components/Filters/OperationType/OperationType.hook\";\nimport { FRAGMENT_PROPERTYTYPES } from \"../../../Components/Filters/PropertyType/PropertyType.hook\";\nimport { FRAGMENT_SEASONS } from \"../../../Components/Filters/TemporalFilter/Seasons/Seasons.hook\";\nimport { FRAGMENT_DATERANGE } from \"../../../Components/Filters/TemporalFilter/DateRange/DateRange.hook\";\nimport { useFilters } from \"../../../Components/Filters/Filters.hook\";\n\nconst QUERY_AVAILABLE_FILTERS = gql`\n  query availableFilters{\n    availableFilters(show_in_home:true){\n\t\t  ${FRAGMENT_OPERATIONTYPES.query()}\n\t\t  ${FRAGMENT_PROPERTYTYPES.query()}\n      ${FRAGMENT_SEASONS.query()}\n      ${FRAGMENT_DATERANGE.query()}\n    }\n  }\n`;\n\nconst QUERY_SEARCH_URL = gql`\n\tquery searchUrl($params: SearchParamsInput!) {\n\t\tsearchUrl(params: $params) {\n\t\t\turl\n\t\t}\n\t\terror\n\t}\n`;\n\nexport const useHomeFilters = () => {\n\tconst { filters, changeFilters, filtersTags } = useFilters();\n\tconst doQuery = useQuery(QUERY_AVAILABLE_FILTERS);\n\n\tconst [getSearchURL, response] = useLazyQuery(QUERY_SEARCH_URL, {\n\t\tonError: errURL => console.error(\"ERROR\", errURL),\n\t});\n\n\treturn {\n\t\tfilters,\n\t\tchangeFilters,\n\t\tfiltersTags,\n\t\tsearch: {\n\t\t\tsend: getSearchURL,\n\t\t\tresponse: response,\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}