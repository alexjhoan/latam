{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useFilters } from \"../Filters.hook\";\nimport { showSeason, showDateRange } from \"../../../Utils/Functions\";\nexport var useTemporalFilter = function useTemporalFilter() {\n  _s();\n\n  var _useFilters = useFilters(),\n      filters = _useFilters.filters;\n\n  var _useState = useState(filters.season ? true : false),\n      showSeasonInput = _useState[0],\n      setShowSeasonInput = _useState[1];\n\n  var _useState2 = useState(false),\n      isTemporal = _useState2[0],\n      setIsTemporal = _useState2[1];\n\n  useEffect(function () {\n    setIsTemporal(showSeason(filters.operation_type_id, 1) && showDateRange(filters.operation_type_id)); //@todo - add country id from hook, not hardcoded\n  }, [filters]);\n  return {\n    filters: filters,\n    showSeasonInput: showSeasonInput,\n    setShowSeasonInput: setShowSeasonInput,\n    isTemporal: isTemporal\n  };\n};\n\n_s(useTemporalFilter, \"agmbXfXJR6qSo12zOnYD4w0vyfk=\", false, function () {\n  return [useFilters];\n});","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/Filters/TemporalFilter/TemporalFilter.hook.tsx"],"names":["useState","useEffect","useFilters","showSeason","showDateRange","useTemporalFilter","filters","season","showSeasonInput","setShowSeasonInput","isTemporal","setIsTemporal","operation_type_id"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,0BAA1C;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAAA,oBAClBH,UAAU,EADQ;AAAA,MAC9BI,OAD8B,eAC9BA,OAD8B;;AAAA,kBAEQN,QAAQ,CAACM,OAAO,CAACC,MAAR,GAAiB,IAAjB,GAAwB,KAAzB,CAFhB;AAAA,MAE/BC,eAF+B;AAAA,MAEdC,kBAFc;;AAAA,mBAGFT,QAAQ,CAAC,KAAD,CAHN;AAAA,MAG/BU,UAH+B;AAAA,MAGnBC,aAHmB;;AAKtCV,EAAAA,SAAS,CAAC,YAAM;AACfU,IAAAA,aAAa,CACZR,UAAU,CAACG,OAAO,CAACM,iBAAT,EAA4B,CAA5B,CAAV,IACCR,aAAa,CAACE,OAAO,CAACM,iBAAT,CAFF,CAAb,CADe,CAIZ;AACH,GALQ,EAKN,CAACN,OAAD,CALM,CAAT;AAOA,SAAO;AACNA,IAAAA,OAAO,EAAPA,OADM;AAENE,IAAAA,eAAe,EAAEA,eAFX;AAGNC,IAAAA,kBAAkB,EAAEA,kBAHd;AAINC,IAAAA,UAAU,EAAEA;AAJN,GAAP;AAMA,CAlBM;;GAAML,iB;UACQH,U","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useFilters } from \"../Filters.hook\";\nimport { showSeason, showDateRange } from \"../../../Utils/Functions\";\n\nexport const useTemporalFilter = () => {\n\tconst { filters } = useFilters();\n\tconst [showSeasonInput, setShowSeasonInput] = useState(filters.season ? true : false);\n\tconst [isTemporal, setIsTemporal] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetIsTemporal(\n\t\t\tshowSeason(filters.operation_type_id, 1) &&\n\t\t\t\tshowDateRange(filters.operation_type_id)\n\t\t); //@todo - add country id from hook, not hardcoded\n\t}, [filters]);\n\n\treturn {\n\t\tfilters,\n\t\tshowSeasonInput: showSeasonInput,\n\t\tsetShowSeasonInput: setShowSeasonInput,\n\t\tisTemporal: isTemporal,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}