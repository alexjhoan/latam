{"ast":null,"code":"var _jsxFileName = \"/home/ansina/jsStuff/infocasas-landings/shared-components/Components/User/AuthModal/web.tsx\";\nvar __jsx = React.createElement;\nimport \"./styles.less\";\nimport React, { useEffect, useState } from \"react\";\nimport { CloseCircleFilled } from \"@ant-design/icons\";\nimport { Login } from \"../LogIn/web\";\nimport { Modal } from \"antd\";\nimport { useIsAuthModalShowing } from \"../../../GlobalHooks/useIsAuthModalShowing\";\nimport { FullScreen } from \"../../FullScreen/web\";\nconst EVENT_NAME = \"EVENT_SHOW_LOGIN_MODAL\";\n\nconst AuthModal = () => {\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState(false);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    setIsAuthModalShowing\n  } = useIsAuthModalShowing();\n  const {\n    0: event,\n    1: setEvent\n  } = useState({\n    accept: data => {},\n    reject: () => {}\n  });\n\n  const listener = ({\n    detail: {\n      accept,\n      reject,\n      defaultModalType,\n      email\n    }\n  }) => {\n    console.warn(`${EVENT_NAME} FIRED`);\n    setIsAuthModalShowing(true);\n\n    if (!modalType) {\n      setModalType(defaultModalType);\n      setEvent({\n        accept: accept,\n        reject: reject\n      });\n      setEmail(email);\n    }\n  };\n\n  useEffect(() => {\n    console.warn(`LISTENING TO ${EVENT_NAME} `); // @ts-ignore\n\n    window.addEventListener(EVENT_NAME, listener);\n    window[EVENT_NAME] = true;\n    return () => {\n      console.warn(`REMOVING LISTENER OF ${EVENT_NAME}`); // @ts-ignore\n\n      window.removeEventListener(EVENT_NAME, listener);\n      window[EVENT_NAME] = false;\n    };\n  }, []);\n\n  const onCancel = () => {\n    event.reject();\n    setIsAuthModalShowing(false);\n    setModalType(false);\n  };\n\n  const onOk = data => {\n    event.accept(data);\n    setIsAuthModalShowing(false);\n    setModalType(false);\n  };\n\n  if (!modalType) {\n    return null;\n  }\n\n  return __jsx(Modal, {\n    wrapClassName: \"auth-modal-wrapper\",\n    className: \"auth-modal\",\n    width: \"100%\",\n    visible: !!modalType,\n    onCancel: onCancel,\n    footer: null,\n    centered: true,\n    closeIcon: __jsx(CloseCircleFilled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }, __jsx(FullScreen, {\n    className: \"modal-auth-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }\n  }, __jsx(Login, {\n    onOk: onOk,\n    email: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  })));\n};\n\nconst openAuthModal = ({\n  withPromise = false,\n  defaultModalType = \"LogIn\",\n  email = \"\"\n}) => {\n  if (withPromise) {\n    return new Promise((accept, reject) => {\n      if (false && typeof window[EVENT_NAME] !== \"undefined\" && window[EVENT_NAME]) {\n        window.dispatchEvent(new CustomEvent(EVENT_NAME, {\n          detail: {\n            defaultModalType: defaultModalType,\n            accept: accept,\n            reject: reject,\n            email\n          }\n        }));\n      } else {\n        reject(\"WINDOW ISNT LISTENING TO \" + EVENT_NAME);\n      }\n    });\n  } else {\n    window.dispatchEvent(new CustomEvent(EVENT_NAME, {\n      detail: {\n        defaultModalType: defaultModalType,\n        accept: () => {},\n        reject: () => {},\n        email\n      }\n    }));\n  }\n};\n\nexport { AuthModal, openAuthModal };","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/User/AuthModal/web.tsx"],"names":["React","useEffect","useState","CloseCircleFilled","Login","Modal","useIsAuthModalShowing","FullScreen","EVENT_NAME","AuthModal","modalType","setModalType","email","setEmail","setIsAuthModalShowing","event","setEvent","accept","data","reject","listener","detail","defaultModalType","console","warn","window","addEventListener","removeEventListener","onCancel","onOk","openAuthModal","withPromise","Promise","dispatchEvent","CustomEvent"],"mappings":"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","sourcesContent":["import \"./styles.less\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { CloseCircleFilled } from \"@ant-design/icons\";\nimport { Login } from \"../LogIn/web\";\nimport { Modal } from \"antd\";\nimport { useIsAuthModalShowing } from \"../../../GlobalHooks/useIsAuthModalShowing\";\nimport { FullScreen } from \"../../FullScreen/web\";\n\ntype ModalType = \"LogIn\" | \"Register\" | false;\nconst EVENT_NAME = \"EVENT_SHOW_LOGIN_MODAL\";\n\nconst AuthModal = () => {\n\tconst [modalType, setModalType] = useState<ModalType>(false);\n\tconst [email, setEmail] = useState(\"\");\n\tconst { setIsAuthModalShowing } = useIsAuthModalShowing();\n\n\tconst [event, setEvent] = useState({\n\t\taccept: data => {},\n\t\treject: () => {},\n\t});\n\n\tconst listener = ({ detail: { accept, reject, defaultModalType, email } }) => {\n\t\tconsole.warn(`${EVENT_NAME} FIRED`);\n\t\tsetIsAuthModalShowing(true);\n\t\tif (!modalType) {\n\t\t\tsetModalType(defaultModalType);\n\t\t\tsetEvent({ accept: accept, reject: reject });\n\t\t\tsetEmail(email);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.warn(`LISTENING TO ${EVENT_NAME} `);\n\t\t// @ts-ignore\n\t\twindow.addEventListener(EVENT_NAME, listener);\n\t\twindow[EVENT_NAME] = true;\n\n\t\treturn () => {\n\t\t\tconsole.warn(`REMOVING LISTENER OF ${EVENT_NAME}`);\n\t\t\t// @ts-ignore\n\t\t\twindow.removeEventListener(EVENT_NAME, listener);\n\t\t\twindow[EVENT_NAME] = false;\n\t\t};\n\t}, []);\n\n\tconst onCancel = () => {\n\t\tevent.reject();\n\t\tsetIsAuthModalShowing(false);\n\t\tsetModalType(false);\n\t};\n\n\tconst onOk = data => {\n\t\tevent.accept(data);\n\t\tsetIsAuthModalShowing(false);\n\t\tsetModalType(false);\n\t};\n\n\tif (!modalType) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\twrapClassName=\"auth-modal-wrapper\"\n\t\t\tclassName=\"auth-modal\"\n\t\t\twidth=\"100%\"\n\t\t\tvisible={!!modalType}\n\t\t\tonCancel={onCancel}\n\t\t\tfooter={null}\n\t\t\tcentered\n\t\t\tcloseIcon={<CloseCircleFilled />}>\n\t\t\t<FullScreen className=\"modal-auth-container\">\n\t\t\t\t<Login onOk={onOk} email={email} />\n\t\t\t</FullScreen>\n\t\t</Modal>\n\t);\n};\n\nconst openAuthModal = ({\n\twithPromise = false,\n\tdefaultModalType = \"LogIn\",\n\temail = \"\",\n}: {\n\twithPromise?: boolean;\n\tdefaultModalType?: ModalType;\n\temail?: string;\n}) => {\n\tif (withPromise) {\n\t\treturn new Promise((accept, reject) => {\n\t\t\tif (\n\t\t\t\ttypeof window !== \"undefined\" &&\n\t\t\t\ttypeof window[EVENT_NAME] !== \"undefined\" &&\n\t\t\t\twindow[EVENT_NAME]\n\t\t\t) {\n\t\t\t\twindow.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(EVENT_NAME, {\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\tdefaultModalType: defaultModalType,\n\t\t\t\t\t\t\taccept: accept,\n\t\t\t\t\t\t\treject: reject,\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treject(\"WINDOW ISNT LISTENING TO \" + EVENT_NAME);\n\t\t\t}\n\t\t});\n\t} else {\n\t\twindow.dispatchEvent(\n\t\t\tnew CustomEvent(EVENT_NAME, {\n\t\t\t\tdetail: {\n\t\t\t\t\tdefaultModalType: defaultModalType,\n\t\t\t\t\taccept: () => {},\n\t\t\t\t\treject: () => {},\n\t\t\t\t\temail,\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t}\n};\n\nexport { AuthModal, openAuthModal };\n"]},"metadata":{},"sourceType":"module"}