{"ast":null,"code":"var _jsxFileName = \"/home/ansina/jsStuff/infocasas-landings/shared-components/Components/User/LogIn/GoogleLogin/web.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { GoogleLogin as GL } from \"react-google-login\";\nimport { useState } from \"react\";\nimport { Button } from \"antd\";\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport getConfig from \"next/config\";\nconst {\n  googleClientID\n} = getConfig().publicRuntimeConfig;\nexport const GoogleLogin = ({\n  onClick\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    0: disabled,\n    1: setdisabled\n  } = useState(false);\n\n  const googleFailure = response => {\n    if (response.error == \"idpiframe_initialization_failed\") setdisabled(true);\n  };\n\n  return __jsx(GL, {\n    clientId: googleClientID,\n    onSuccess: response => {\n      onClick({\n        // @ts-ignore\n        token: response.accessToken,\n        provider: \"google\"\n      });\n    },\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    disabled: disabled,\n    render: renderProps => __jsx(Button, {\n      className: \"btn-google\",\n      icon: __jsx(GoogleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 12\n        }\n      }),\n      style: {\n        width: \"100%\"\n      },\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, disabled ? t(\"Para utilizar este botón debes activar las cookies de tercero\") : t(\"Continuar con Google\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  });\n};","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/User/LogIn/GoogleLogin/web.tsx"],"names":["GoogleLogin","GL","useState","Button","GoogleOutlined","useTranslation","getConfig","googleClientID","publicRuntimeConfig","onClick","t","disabled","setdisabled","googleFailure","response","error","token","accessToken","provider","renderProps","width"],"mappings":";;;AAAA,SAASA,WAAW,IAAIC,EAAxB,QAAkC,oBAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAmC,MAAnC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAqBD,SAAS,GAAGE,mBAAvC;AAEA,OAAO,MAAMR,WAAW,GAAG,CAAC;AAAES,EAAAA;AAAF,CAAD,KAAwC;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AAEA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMW,aAAa,GAAGC,QAAQ,IAAI;AACjC,QAAIA,QAAQ,CAACC,KAAT,IAAkB,iCAAtB,EAAyDH,WAAW,CAAC,IAAD,CAAX;AACzD,GAFD;;AAIA,SACC,MAAC,EAAD;AACC,IAAA,QAAQ,EAAEL,cADX;AAEC,IAAA,SAAS,EAAEO,QAAQ,IAAI;AACtBL,MAAAA,OAAO,CAAC;AACP;AACAO,QAAAA,KAAK,EAAEF,QAAQ,CAACG,WAFT;AAGPC,QAAAA,QAAQ,EAAE;AAHH,OAAD,CAAP;AAKA,KARF;AASC,IAAA,SAAS,EAAEL,aATZ;AAUC,IAAA,YAAY,EAAE,oBAVf;AAWC,IAAA,QAAQ,EAAEF,QAXX;AAYC,IAAA,MAAM,EAAEQ,WAAW,IAClB,MAAC,MAAD;AACC,MAAA,SAAS,EAAC,YADX;AAEC,MAAA,IAAI,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFP;AAGC,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHR;AAIC,MAAA,OAAO,EAAED,WAAW,CAACV,OAJtB;AAKC,MAAA,QAAQ,EAAEU,WAAW,CAACR,QALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMEA,QAAQ,GACND,CAAC,CAAC,+DAAD,CADK,GAENA,CAAC,CAAC,sBAAD,CARL,CAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AA2BA,CAnCM","sourcesContent":["import { GoogleLogin as GL } from \"react-google-login\";\nimport { useState } from \"react\";\nimport { Button, Typography } from \"antd\";\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\n\nimport getConfig from \"next/config\";\nconst { googleClientID } = getConfig().publicRuntimeConfig;\n\nexport const GoogleLogin = ({ onClick }: { onClick: Function }) => {\n\tconst { t } = useTranslation();\n\n\tconst [disabled, setdisabled] = useState(false);\n\tconst googleFailure = response => {\n\t\tif (response.error == \"idpiframe_initialization_failed\") setdisabled(true);\n\t};\n\n\treturn (\n\t\t<GL\n\t\t\tclientId={googleClientID}\n\t\t\tonSuccess={response => {\n\t\t\t\tonClick({\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\ttoken: response.accessToken,\n\t\t\t\t\tprovider: \"google\",\n\t\t\t\t});\n\t\t\t}}\n\t\t\tonFailure={googleFailure}\n\t\t\tcookiePolicy={\"single_host_origin\"}\n\t\t\tdisabled={disabled}\n\t\t\trender={renderProps => (\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"btn-google\"\n\t\t\t\t\ticon={<GoogleOutlined />}\n\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\tonClick={renderProps.onClick}\n\t\t\t\t\tdisabled={renderProps.disabled}>\n\t\t\t\t\t{disabled\n\t\t\t\t\t\t? t(\"Para utilizar este botón debes activar las cookies de tercero\")\n\t\t\t\t\t\t: t(\"Continuar con Google\")}\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t/>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}