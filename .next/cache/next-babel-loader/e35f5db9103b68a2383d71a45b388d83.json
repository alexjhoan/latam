{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useQuery } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nconst QUERY_SEO = gql`\n\tquery SEO($url: String!) {\n\t\tseoMetaTags(url: $url) {\n\t\t\th1\n\t\t\ttitle\n\t\t\tbreadcrumbs {\n\t\t\t\ttext\n\t\t\t\turl\n\t\t\t}\n\n\t\t\tdescription\n\t\t\tog_image\n\t\t\tnoindex\n\t\t\tcanonical\n\t\t\tsite_name\n\t\t\tlinks\n\t\t\ttext\n\t\t}\n\t}\n`;\nexport const useSEO = () => {\n  var _seoMetaTags$breadcru;\n\n  const router = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_SEO, {\n    variables: {\n      url: router.asPath\n    }\n  });\n\n  let seoMetaTags = _objectSpread({}, data === null || data === void 0 ? void 0 : data.seoMetaTags);\n\n  if (seoMetaTags && ((_seoMetaTags$breadcru = seoMetaTags.breadcrumbs) === null || _seoMetaTags$breadcru === void 0 ? void 0 : _seoMetaTags$breadcru.length) > 1) {\n    seoMetaTags[\"lastSearch\"] = seoMetaTags.breadcrumbs[seoMetaTags.breadcrumbs.length - 2];\n  }\n\n  return {\n    loading,\n    seoMetaTags,\n    error\n  };\n};","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/Components/SEO/hook.tsx"],"names":["useQuery","gql","useRouter","QUERY_SEO","useSEO","router","data","loading","error","variables","url","asPath","seoMetaTags","breadcrumbs","length"],"mappings":";;;;;;AAAA,SAAsBA,QAAtB,QAAsC,gBAAtC;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAQA,MAAMC,SAAS,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;CAAtB;AAqBA,OAAO,MAAMG,MAAM,GAAG,MAAuB;AAAA;;AAC5C,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACG,SAAD,EAAY;AACpDM,IAAAA,SAAS,EAAE;AACVC,MAAAA,GAAG,EAAEL,MAAM,CAACM;AADF;AADyC,GAAZ,CAAzC;;AAMA,MAAIC,WAAW,qBAAQN,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEM,WAAd,CAAf;;AACA,MAAIA,WAAW,IAAI,0BAAAA,WAAW,CAACC,WAAZ,gFAAyBC,MAAzB,IAAkC,CAArD,EAAwD;AACvDF,IAAAA,WAAW,CAAC,YAAD,CAAX,GAA4BA,WAAW,CAACC,WAAZ,CAAwBD,WAAW,CAACC,WAAZ,CAAwBC,MAAxB,GAAiC,CAAzD,CAA5B;AACA;;AAED,SAAO;AACNP,IAAAA,OADM;AAENK,IAAAA,WAFM;AAGNJ,IAAAA;AAHM,GAAP;AAKA,CAnBM","sourcesContent":["import { ApolloError, useQuery } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\";\nimport { seoMetaTags } from \"./model\";\nimport { useRouter } from \"next/router\";\n\ninterface SeoHookResponse {\n\tseoMetaTags: seoMetaTags;\n\tloading: boolean;\n\terror: ApolloError;\n}\n\nconst QUERY_SEO = gql`\n\tquery SEO($url: String!) {\n\t\tseoMetaTags(url: $url) {\n\t\t\th1\n\t\t\ttitle\n\t\t\tbreadcrumbs {\n\t\t\t\ttext\n\t\t\t\turl\n\t\t\t}\n\n\t\t\tdescription\n\t\t\tog_image\n\t\t\tnoindex\n\t\t\tcanonical\n\t\t\tsite_name\n\t\t\tlinks\n\t\t\ttext\n\t\t}\n\t}\n`;\n\nexport const useSEO = (): SeoHookResponse => {\n\tconst router = useRouter();\n\n\tconst { data, loading, error } = useQuery(QUERY_SEO, {\n\t\tvariables: {\n\t\t\turl: router.asPath,\n\t\t},\n\t});\n\n\tlet seoMetaTags = { ...data?.seoMetaTags };\n\tif (seoMetaTags && seoMetaTags.breadcrumbs?.length > 1) {\n\t\tseoMetaTags[\"lastSearch\"] = seoMetaTags.breadcrumbs[seoMetaTags.breadcrumbs.length - 2];\n\t}\n\n\treturn {\n\t\tloading,\n\t\tseoMetaTags,\n\t\terror,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}