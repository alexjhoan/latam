{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport getConfig from 'next/config';\nvar NODE_ENV = getConfig().publicRuntimeConfig.NODE_ENV;\nvar canDebug = NODE_ENV !== \"production\";\n\nvar Console = /*#__PURE__*/function () {\n  function Console() {\n    _classCallCheck(this, Console);\n  }\n\n  _createClass(Console, [{\n    key: \"log\",\n    value: function log(x) {\n      if (!canDebug) return;\n      console.log(x);\n    }\n  }, {\n    key: \"info\",\n    value: function info(x) {\n      if (!canDebug) return;\n      console.info(x);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(x) {\n      if (!canDebug) return;\n      console.warn(x);\n    }\n  }, {\n    key: \"error\",\n    value: function error(x) {\n      if (!canDebug) return;\n      console.error(x);\n    }\n  }, {\n    key: \"groupCollapsed\",\n    value: function groupCollapsed(x) {\n      if (!canDebug) return;\n      console.groupCollapsed(x);\n    }\n  }, {\n    key: \"group\",\n    value: function group(x) {\n      if (!canDebug) return;\n      console.group(x);\n    }\n  }, {\n    key: \"groupEnd\",\n    value: function groupEnd() {\n      if (!canDebug) return;\n      console.groupEnd();\n    }\n  }, {\n    key: \"time\",\n    value: function time(x) {\n      if (!canDebug) return;\n      console.time(x);\n    }\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd(x) {\n      if (!canDebug) return;\n      console.timeEnd(x);\n    }\n  }]);\n\n  return Console;\n}();\n\nexport default new Console();","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/lib/console.js"],"names":["getConfig","NODE_ENV","publicRuntimeConfig","canDebug","Console","x","console","log","info","warn","error","groupCollapsed","group","groupEnd","time","timeEnd"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,IAAMC,QAAQ,GAAGD,SAAS,GAAGE,mBAAZ,CAAgCD,QAAjD;AACA,IAAME,QAAQ,GAAGF,QAAQ,KAAK,YAA9B;;IAEMG,O;;;;;;;wBAEEC,C,EAAG;AACH,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;;;yBAEIA,C,EAAG;AACJ,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACE,IAAR,CAAaH,CAAb;AACH;;;yBAEIA,C,EAAG;AACJ,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACG,IAAR,CAAaJ,CAAb;AACH;;;0BAEKA,C,EAAG;AACL,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACI,KAAR,CAAcL,CAAd;AACH;;;mCAEcA,C,EAAG;AACd,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACK,cAAR,CAAuBN,CAAvB;AACH;;;0BAEKA,C,EAAG;AACL,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACM,KAAR,CAAcP,CAAd;AACH;;;+BAEU;AACP,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACO,QAAR;AACH;;;yBACIR,C,EAAG;AACJ,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACQ,IAAR,CAAaT,CAAb;AACH;;;4BACOA,C,EAAG;AACP,UAAG,CAACF,QAAJ,EAAc;AACdG,MAAAA,OAAO,CAACS,OAAR,CAAgBV,CAAhB;AACH;;;;;;AAGL,eAAe,IAAID,OAAJ,EAAf","sourcesContent":["import getConfig from 'next/config'\nconst NODE_ENV = getConfig().publicRuntimeConfig.NODE_ENV;\nconst canDebug = NODE_ENV !== \"production\";\n\nclass Console {\n\n    log(x) {\n        if(!canDebug) return;\n        console.log(x);\n    }\n\n    info(x) {\n        if(!canDebug) return;\n        console.info(x);\n    }\n\n    warn(x) {\n        if(!canDebug) return;\n        console.warn(x)\n    }\n\n    error(x) {\n        if(!canDebug) return;\n        console.error(x)\n    }\n\n    groupCollapsed(x) {\n        if(!canDebug) return;\n        console.groupCollapsed(x);\n    }\n\n    group(x) {\n        if(!canDebug) return;\n        console.group(x);\n    }\n\n    groupEnd() {\n        if(!canDebug) return;\n        console.groupEnd();\n    }\n    time(x) {\n        if(!canDebug) return;\n        console.time(x);\n    }\n    timeEnd(x) {\n        if(!canDebug) return;\n        console.timeEnd(x);\n    }\n}\n\nexport default new Console();"]},"metadata":{},"sourceType":"module"}