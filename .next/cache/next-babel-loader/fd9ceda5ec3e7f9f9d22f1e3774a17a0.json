{"ast":null,"code":"import { useState, useEffect } from \"react\";\nlet isAuthModalShowing = false;\nlet observers = [];\nexport const setIsAuthModalShowing = status => {\n  isAuthModalShowing = status;\n  observers.forEach(update => update(status));\n};\nexport function useIsAuthModalShowing() {\n  const {\n    0: authModalState,\n    1: setAuthModalState\n  } = useState(isAuthModalShowing);\n  useEffect(() => {\n    observers.push(setAuthModalState);\n    setAuthModalState(isAuthModalShowing);\n    return () => {\n      observers = observers.filter(update => update !== setAuthModalState);\n    };\n  }, [authModalState]);\n  return {\n    isAuthModalShowing,\n    setIsAuthModalShowing\n  };\n}","map":{"version":3,"sources":["/home/ansina/jsStuff/infocasas-landings/shared-components/GlobalHooks/useIsAuthModalShowing.tsx"],"names":["useState","useEffect","isAuthModalShowing","observers","setIsAuthModalShowing","status","forEach","update","useIsAuthModalShowing","authModalState","setAuthModalState","push","filter"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,IAAIC,kBAAkB,GAAG,KAAzB;AACA,IAAIC,SAAS,GAAG,EAAhB;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,MAAD,IAAY;AAC/CH,EAAAA,kBAAkB,GAAGG,MAArB;AACAF,EAAAA,SAAS,CAACG,OAAV,CAAkBC,MAAM,IAAIA,MAAM,CAACF,MAAD,CAAlC;AACD,CAHM;AAKP,OAAO,SAASG,qBAAT,GAAgC;AACrC,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCV,QAAQ,CAACE,kBAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,CAACQ,IAAV,CAAeD,iBAAf;AACAA,IAAAA,iBAAiB,CAACR,kBAAD,CAAjB;AACA,WAAO,MAAM;AACXC,MAAAA,SAAS,GAAGA,SAAS,CAACS,MAAV,CAAiBL,MAAM,IAAIA,MAAM,KAAKG,iBAAtC,CAAZ;AACD,KAFD;AAGD,GANQ,EAMN,CAACD,cAAD,CANM,CAAT;AAQA,SAAO;AACLP,IAAAA,kBADK;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { useState, useEffect } from \"react\";\n\nlet isAuthModalShowing = false;\nlet observers = [];\n\nexport const setIsAuthModalShowing = (status) => {\n  isAuthModalShowing = status;\n  observers.forEach(update => update(status));\n}\n\nexport function useIsAuthModalShowing(){\n  const [authModalState, setAuthModalState] = useState(isAuthModalShowing);\n\n  useEffect(() => {\n    observers.push(setAuthModalState);\n    setAuthModalState(isAuthModalShowing);\n    return () => {\n      observers = observers.filter(update => update !== setAuthModalState);\n    };\n  }, [authModalState]);\n\n  return {\n    isAuthModalShowing,\n    setIsAuthModalShowing\n  }\n}"]},"metadata":{},"sourceType":"module"}